{"version":3,"sources":["locations/langham.png","locations/kone.png","locations/templates/commercial.js","locations/langham.js","locations/templates/residential.js","locations/kone.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","QRCode","require","setProp","propValue","defautlValue","undefined","Commericial","props","handleChange","e","setState","target","name","value","state","baseInput","title","useTitle","logo","logoWidth","icon","this","content","rel","type","href","sizes","Container","Row","Col","src","alt","width","TextField","label","onChange","size","renderAs","fgColor","bgColor","React","Component","Lamgham","langham","Residence","handleClick","resetClicked","console","log","button","font","variant","action","Button","onClick","className","defaultButtonClass","style","fontSize","backgroundColor","borderColor","color","keyboard","align","baseKeyboardClass","floorButtonFont","floorButtonVariant","numberButtonFont","numberButtonVariant","dangerButtonFont","dangerButtonVariant","manifest","qrWidth","document","Kone","kone","App","exact","path","component","Commercial","Residential","Langham","Boolean","window","location","hostname","match","app","basename","process","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f259092c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/langham.753cb62e.png\";","module.exports = __webpack_public_path__ + \"static/media/kone.29357ec4.png\";","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport TextField from '@material-ui/core/TextField'\nimport Helmet from 'react-helmet'\n\nvar QRCode = require('qrcode.react');\n\n\nconst setProp = (propValue, defautlValue) => {\n    return propValue !== undefined ? propValue : defautlValue\n}\n\nexport default class Commericial extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            baseInput: \"\",\n            title: setProp(props.title, \"Qlicky\"),\n            useTitle: setProp(props.useTitle, true),\n            logo: setProp(props.logo, undefined),\n            logoWidth: setProp(props.logoWidth, 200),\n            icon: setProp(props.icon, \"favico.ico\"),\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    render() {\n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name={this.state.title} content={this.state.title} />\n                    <link rel=\"icon\" type=\"image/png\" href={this.state.icon} sizes=\"16x16\" />\n                    <link rel=\"apple-touch-icon\" type=\"image/png\" href={this.state.icon} sizes=\"16x16\" />\n                </Helmet>\n                <Container>\n                    <Row>\n                        <Col>\n                            {this.state.useTitle ?\n                                <h1>{this.state.title}</h1> :\n                                <img src={this.state.logo} alt=\"\" width={this.state.logoWidth}></img>}\n                            <br /><br />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <TextField name=\"baseInput\" label=\"Where to?\" onChange={this.handleChange} /> <br /> <br />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <QRCode value={this.state.baseInput} size={200} renderAs=\"svg\"\n                                fgColor={this.state.baseInput === \"\" ? \"#DCDCDC\" : \"#000000\"}\n                                bgColor={this.state.baseInput === \"\" ? \"#DCDCDC\" : \"#FFFFFF\"}></QRCode>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport langham from './langham.png'\nimport Commercial from './templates/commercial.js'\n\nconst appleTouchIcon = \"icons/langhamplace/langham.ico\"\n\n\nexport default class Lamgham extends React.Component {\n    render() {\n        return (\n            <div>\n                <Commercial title=\"Langham Place\" logo={langham} logoWidth={200} icon={appleTouchIcon} useTitle={false}></Commercial>\n            </div>\n        )\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {Button} from 'react-bootstrap'\nimport Helmet from 'react-helmet'\n\nvar QRCode = require('qrcode.react');\n\nconst buttonFontSize = 30;\n\nconst setProp = (propValue, defautlValue) => {\n    return propValue !== undefined ? propValue : defautlValue\n}\n\nexport default class Residence extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            baseInput: \"\",\n\n            title: setProp(props.title, \"Qlicky\"),\n            logo: setProp(props.logo, undefined),\n            useTitle: setProp(props.useTitle, true),\n            manifest: setProp(props.manifest, \"manifest.json\"),\n            icon: setProp(props.icon, \"favicon.ico\"),\n\n            logoWidth: setProp(props.logoWidth, 200),\n            qrWidth: setProp(props.qrWidth, 200),\n\n            baseKeyboardClass: setProp(props.baseKeyboardClass, \"keyboard-content\"),\n            defaultButtonClass: setProp(props.defaultButtonClass, \"keyboard-button\"),\n            \n            floorButtonVariant: setProp(props.floorButtonVariant, \"#F5F5F5\"),\n            floorButtonFont: setProp(props.floorButtonFont, \"#000000\"),\n\n            numberButtonVariant: setProp(props.numberButtonVariant, \"#212121\"),\n            numberButtonFont: setProp(props.numberButtonFont, \"#FFFFFF\"),\n\n            dangerButtonVariant: setProp(props.dangerButtonVariant, \"#D32F2F\"),\n            dangerButtonFont: setProp(props.dangerButtonFont, \"#FFFFFF\"),\n        };\n    }\n\n    componentDidMount() {\n        document.title = this.state.title\n    }\n\n    handleClick = (e) => {\n        this.setState(\n            { baseInput: this.state.baseInput + e.target.name }\n        )\n    }\n\n    resetClicked = (e) => {\n        console.log(\"Reset Text\")\n        this.setState(\n            { baseInput: \"\" }\n        )\n    }\n\n    button = (name, font, variant, action = this.handleClick) => {\n        return (\n            <Button \n            name={name}\n            onClick={action} \n            className={this.state.defaultButtonClass} \n            style={{ \n                    fontSize: buttonFontSize, \n                    backgroundColor: variant,\n                    borderColor: variant,\n                    color: font,\n                }}>\n                {name}\n            </Button>\n        )\n    }\n\n    keyboard = () => {\n        return (\n            <div>\n                <table align=\"center\" className={this.state.baseKeyboardClass}>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {this.button(\"U\", this.state.floorButtonFont, this.state.floorButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"1\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"2\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"3\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.button(\"L\", this.state.floorButtonFont, this.state.floorButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"4\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"5\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"6\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.button(\"B\", this.state.floorButtonFont, this.state.floorButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"7\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"8\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"9\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {this.button(\"G\", this.state.floorButtonFont, this.state.floorButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"del\", this.state.dangerButtonFont, this.state.dangerButtonVariant, this.resetClicked)}\n                            </td>\n                            <td>\n                                {this.button(\"0\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                            <td>\n                                {this.button(\"#\", this.state.numberButtonFont, this.state.numberButtonVariant)}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Helmet>\n                    <title>{this.state.title}</title>\n                    <meta name={this.state.title} content={this.state.title} />\n                    <link rel=\"icon\" type=\"image/png\" href={this.state.icon} sizes=\"16x16\" />\n                    <link rel=\"apple-touch-icon\" type=\"image/png\" href={this.state.icon} sizes=\"16x16\" />\n                </Helmet>\n                <br />\n                { this.state.useTitle ?\n                        <h1>{this.state.title}</h1> :\n                    <img src={this.state.logo} alt=\"\" width={this.state.logoWidth}></img>}\n                <br /><br />\n                <QRCode value={this.state.baseInput} size={this.state.qrWidth} renderAs=\"svg\"\n                    fgColor={this.state.baseInput === \"\" ? \"#DCDCDC\" : \"#000000\"}\n                    bgColor={this.state.baseInput === \"\" ? \"#DCDCDC\" : \"#FFFFFF\"}></QRCode> <br /> <br />\n\n                <h2>{this.state.baseInput !== \"\" ? this.state.baseInput : \"Welcome\"}</h2>\n                <div>\n                    {this.keyboard()}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport kone from './kone.png'\nimport Residential from './templates/residential.js'\n\nconst appleTouchIcon = \"icons/kone/kone.ico\"\n\nexport default class Kone extends React.Component {\n\n    render() {\n        return (\n\n            <div>\n                <Residential\n                    title=\"KONE\"\n                    logo={kone}\n                    icon={appleTouchIcon}\n                    useTitle={false}\n                    logoWidth={200}\n                    defaultButtonClass=\"kone-button\"\n\n                    floorButtonVariant=\"#1976d2\"\n                    floorButtonFont=\"#FFFFFF\"\n\n                    numberButtonVariant=\"#f5f5f5\"\n                    numberButtonFont=\"#000000\"\n\n                    dangerButtonVariant=\"#212121\"\n                    dangerButtonFont=\"#FFFFFF\"\n\n                    baseKeyboardClass=\"kone-content\"\n                    qrWidth={250}\n                    ></Residential>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Commercial from './locations/templates/commercial.js'\nimport Langham from \"./locations/langham.js\"\nimport Kone from \"./locations/kone.js\"\nimport Residential from './locations/templates/residential.js'\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Commercial} />\n\t\t\t\t<Route exact path=\"/residence\" component={Residential}/>\n\t\t\t\t<Route exact path=\"/commercial\" component={Commercial} />\n\t\t\t\t<Route exact path=\"/langhamplace\" component={Langham} />\n\t\t\t\t<Route exact path=\"/kone\" component={Kone} />\n\t\t\t</Switch>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nconst app = (\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <App/>\n  </HashRouter>\n)\n\nconsole.log(\"Hello V1, \" + process.env.PUBLIC_URL);\nReactDOM.render( app,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}