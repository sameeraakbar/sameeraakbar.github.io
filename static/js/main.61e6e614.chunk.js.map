{"version":3,"sources":["locations/langham.png","locations/templates/commercial.js","locations/langham.js","locations/templates/residential.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","QRCode","require","Commericial","props","handleChange","e","setState","target","name","value","state","baseInput","title","logo","logoWidth","Container","Row","Col","undefined","this","src","alt","TextField","label","onChange","size","renderAs","fgColor","bgColor","React","Component","Lamgham","langham","Residence","handleClick","console","log","resetClicked","keyboard","align","className","Button","variant","onClick","style","fontSize","App","basename","path","component","Commercial","exact","Residential","Langham","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.61e6e614.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/langham.753cb62e.png\";","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap'\nimport TextField from '@material-ui/core/TextField'\n\nvar QRCode = require('qrcode.react');\n\n\nexport default class Commericial extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            baseInput: \"\",\n            title: props.title,\n            logo: props.logo,\n            logoWidth: props.logoWidth,\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    render() {\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <Col>\n                            <br />\n                            {this.state.logo === undefined ?\n                                this.state.title === undefined ?\n                                    <h1>Qlicky</h1> :\n                                    <h1>{this.state.title}</h1> :\n                                <img src={this.state.logo} alt=\"\"></img>}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <TextField name=\"baseInput\" label=\"Where to?\" onChange={this.handleChange} /> <br /> <br />\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <QRCode value={this.state.baseInput} size={200} renderAs=\"svg\"\n                                fgColor={this.state.baseInput === \"\" ? \"#DCDCDC\" : \"#000000\"}\n                                bgColor={this.state.baseInput === \"\" ? \"#DCDCDC\" : \"#FFFFFF\"}></QRCode>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport langham from './langham.png'\nimport Commercial from './templates/commercial.js'\n\nexport default class Lamgham extends React.Component {\n    render() {\n        return (\n            <div>\n                <Commercial logo={langham} logoWidth={200}></Commercial>\n            </div>\n        )\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { Button } from 'react-bootstrap'\n\n\nvar QRCode = require('qrcode.react');\n\nconst buttonFontSize = 30;\n\nexport default class Residence extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            baseInput: \"\",\n            title: props.title,\n            logo: props.logo,\n        };\n    }\n\n    handleClick = (e) => {\n        console.log(e.target.name)\n        this.setState(\n            { baseInput: this.state.baseInput + e.target.name }\n        )\n    }\n\n    resetClicked = (e) => {\n        this.setState(\n            { baseInput: \"\" }\n        )\n    }\n\n    keyboard = () => {\n        return (\n            <div>\n                <table align=\"center\" className=\"keyboard-content\">\n                    <tr>\n                        <td>\n                            <Button name=\"UG\" variant=\"light\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>UG</Button>\n                        </td>\n                        <td>\n                            <Button name=\"1\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>1</Button>\n                        </td>\n                        <td>\n                            <Button name=\"2\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>2</Button>\n                        </td>\n                        <td>\n                            <Button name=\"3\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>3</Button>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <Button name=\"LG\" variant=\"light\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>LG</Button>\n                        </td>\n                        <td>\n                            <Button name=\"4\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>4</Button>\n                        </td>\n                        <td>\n                            <Button name=\"5\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>5</Button>\n                        </td>\n                        <td>\n                            <Button name=\"6\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>6</Button>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <Button name=\"B\" variant=\"light\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>B</Button>\n                        </td>\n                        <td>\n                            <Button name=\"7\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>7</Button>\n                        </td>\n                        <td>\n                            <Button name=\"8\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>8</Button>\n                        </td>\n                        <td>\n                            <Button name=\"9\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>9</Button>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <Button name=\"G\" variant=\"light\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>G</Button>\n                        </td>\n                        <td>\n                            <Button name=\"del\" variant=\"danger\" onClick={this.resetClicked} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>del</Button>\n                        </td>\n                        <td>\n                            <Button name=\"0\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>0</Button>\n                        </td>\n                        <td>\n                            <Button name=\"#\" variant=\"dark\" onClick={this.handleClick} className=\"keyboard-button\" style={{ fontSize: buttonFontSize }}>#</Button>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        )\n    }\n\n\n    render() {\n        return (\n            <div>\n                <br />\n                {this.state.logo === undefined ?\n                    this.state.title === undefined ? \n                        <h1>Qlicky</h1> : \n                        <h1>{this.state.title}</h1> :\n                    <img src={this.state.logo} alt=\"\"></img>}\n\n                <QRCode value={this.state.baseInput} size={200} renderAs=\"svg\"\n                    fgColor={this.state.baseInput === \"\" ? \"#DCDCDC\" : \"#000000\"}\n                    bgColor={this.state.baseInput === \"\" ? \"#DCDCDC\" : \"#FFFFFF\"}></QRCode> <br /> <br />\n\n                <h2>{this.state.baseInput !== \"\" ? this.state.baseInput : \"Welcome\"}</h2>\n                <div>\n                    {this.keyboard()}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Commercial from './locations/templates/commercial.js'\nimport Langham from \"./locations/langham.js\"\nimport Residential from './locations/templates/residential.js'\nimport { HashRouter, Route } from 'react-router-dom';\n\nfunction App() {\n\n\treturn (\n\t\t<HashRouter basename='/'>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Route path=\"/\" component={Commercial} exact />\n\t\t\t\t<Route path=\"/residence\" component={Residential} exact />\n\t\t\t\t<Route path=\"/commercial\" component={Commercial} />\n\t\t\t\t<Route path=\"/langhamplace\" component={Langham} />\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}